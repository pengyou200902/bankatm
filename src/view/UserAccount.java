package view;
import controller.*;
import model.*;

import javax.swing.*;
import javax.swing.table.DefaultTableModel;
import java.awt.*;
import java.util.List;

/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */

/**
 *
 * @author oshorawal
 */

public class UserAccount extends javax.swing.JFrame {

    /**
     * Creates new form user_account
     */
    private BankAccount user_bank_account;
    private String account_type;
    private BankAccountController bank_account_controller;

    public UserAccount(javax.swing.JDialog parent, boolean modal, BankAccount acc, String acc_type) {
        this.user_bank_account = acc;
        this.bank_account_controller = new BankAccountController();
        this.account_type = acc_type;
        initComponents();
        setLocationRelativeTo(parent);
        panel1.setBackground(Color.GREEN);
        clear_table();
        addDataToTable();
    }

//    public user_account(User_frame aThis, boolean b) {
//        initComponents();
//        panel1.setBackground(Color.GREEN);
//        this.dispose();
//        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
//    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        panel1 = new javax.swing.JPanel();
        withdraw_button = new javax.swing.JButton();
        deposit_button = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        accounts_table = new javax.swing.JTable();
        transfer_money_button = new javax.swing.JButton();
        apply_loan_button = new javax.swing.JButton();

        setDefaultCloseOperation(WindowConstants.DISPOSE_ON_CLOSE);

        withdraw_button.setText("Withdraw");
        withdraw_button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                withdraw_buttonActionPerformed(evt);
            }
        });

        deposit_button.setText("Deposit");
        deposit_button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deposit_buttonActionPerformed(evt);
            }
        });

        accounts_table.setModel(new javax.swing.table.DefaultTableModel(
                new Object [][] {
                        {null, null},
                        {null, null},
                        {null, null}
                },
                new String [] {
                        "Currency Type", "Balance"
                }
        ));
        accounts_table.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jScrollPane1.setViewportView(accounts_table);

        transfer_money_button.setText("Transfer");
        transfer_money_button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                transfer_money_buttonActionPerformed(evt);
            }
        });

        apply_loan_button.setText("Apply Loan");
        apply_loan_button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                apply_loan_buttonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panel1Layout = new javax.swing.GroupLayout(panel1);
        panel1.setLayout(panel1Layout);
        panel1Layout.setHorizontalGroup(
                panel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(panel1Layout.createSequentialGroup()
                                .addGap(26, 26, 26)
                                .addComponent(withdraw_button)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(deposit_button)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(transfer_money_button)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(apply_loan_button)
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panel1Layout.createSequentialGroup()
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 327, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(51, 51, 51))
        );
        panel1Layout.setVerticalGroup(
                panel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(panel1Layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addGroup(panel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(withdraw_button)
                                        .addComponent(deposit_button)
                                        .addComponent(transfer_money_button)
                                        .addComponent(apply_loan_button))
                                .addGap(29, 29, 29)
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addContainerGap(218, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(panel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(panel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>                        /editor-fold>//GEN-END:initComponents

    private void withdraw_buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_withdraw_buttonActionPerformed
        // TODO add your handling code here:
        int row_selected = accounts_table.getSelectedRow();
        String currency_type = (String) accounts_table.getValueAt(row_selected, 0);
        double balance = (Double) accounts_table.getValueAt(row_selected, 1);
        if (row_selected >= 0) {
            WithdrawFrame withdraw = new WithdrawFrame(this, true, this.user_bank_account, currency_type, balance);
            withdraw.setVisible(true);

        }
        //GEN-LAST:event_withdraw_buttonActionPerformed
        clear_table();
        addDataToTable();
    }
        private void deposit_buttonActionPerformed (java.awt.event.ActionEvent evt)
        {//GEN-FIRST:event_deposit_buttonActionPerformed
            // TODO add your handling code here:

            DepositMoneyFrame deposit_frame = new DepositMoneyFrame(this, true, this.user_bank_account);
            // Update the table
            deposit_frame.setVisible(true);
            clear_table();
            addDataToTable();


        }//GEN-LAST:event_deposit_buttonActionPerformed

        private void transfer_money_buttonActionPerformed (java.awt.event.ActionEvent evt)
        {//GEN-FIRST:event_transfer_money_buttonActionPerformed
            // TODO add your handling code here:
            TransferMoneyFrame frame = new TransferMoneyFrame(this, true, this.user_bank_account);
            frame.setVisible(true);
            clear_table();
            addDataToTable();
        }//GEN-LAST:event_transfer_money_buttonActionPerformed

        private void apply_loan_buttonActionPerformed(java.awt.event.ActionEvent evt) {
        // TODO add your handling code here:
        if(this.user_bank_account.getType().equals(AccountTypes.CHECKING)){
            LoanForm frame = new LoanForm(this,true,this.user_bank_account);
            frame.setVisible(true);
            clear_table();
            addDataToTable();
        }
        else{
            javax.swing.JOptionPane.showMessageDialog(this, "Only Checking account can apply for loan", "Warning",
                    javax.swing.JOptionPane.WARNING_MESSAGE);
        }
    }

    private void clear_table(){
        DefaultTableModel table = (DefaultTableModel)  accounts_table.getModel();
        for (int i = table.getRowCount() - 1; i >= 0; i--) {
            table.removeRow(i);
        }
    }

    private void addDataToTable(){
        DefaultTableModel table = (DefaultTableModel)  accounts_table.getModel();
//        this.accounts = bank_account_controller.getAllBankAccounts(this.user.getUsername());
//        Checking checking = (Checking) this.accounts[0];
//        Saving saving = (Saving) this.accounts[1];
//        Security security = (Security) this.accounts[2];

        if(this.account_type.equalsIgnoreCase("CHECKING")){

            Checking bank_account = (Checking) this.user_bank_account;
            List<BaseCurrency> currencyList = bank_account.getCurrencies();
            for(BaseCurrency crr : currencyList){
                table.addRow(new Object[]{crr.getName(),crr.getAmount()});
            }
        }
        else{
            Saving bank_account = (Saving) this.user_bank_account;
            BaseCurrency crr = bank_account.getBalance();
            table.addRow(new Object[]{crr.getName(),crr.getAmount()});
        }
        }

        /**
         * @param args the command line arguments
         */
//        public static void main(String[] args) {
//        /* Set the Nimbus look and feel */
//            //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
//            /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
//             * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
//             */
//            try {
//                for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
//                    if ("Nimbus".equals(info.getName())) {
//                        javax.swing.UIManager.setLookAndFeel(info.getClassName());
//                        break;
//                    }
//                }
//            } catch (ClassNotFoundException ex) {
//                java.util.logging.Logger.getLogger(user_account.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//            } catch (InstantiationException ex) {
//                java.util.logging.Logger.getLogger(user_account.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//            } catch (IllegalAccessException ex) {
//                java.util.logging.Logger.getLogger(user_account.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//            } catch (javax.swing.UnsupportedLookAndFeelException ex) {
//                java.util.logging.Logger.getLogger(user_account.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//            }
//            //</editor-fold>
//
//            /* Create and display the form */
//            java.awt.EventQueue.invokeLater(new Runnable() {
//                public void run() {
//                    user_account user = new user_account(new javax.swing.JFrame(), true, BankAccount
//                    this.user_bank_account);
//                    user.addWindowListener(new java.awt.event.WindowAdapter() {
//                        @Override
//                        public void windowClosing(java.awt.event.WindowEvent e) {
//                            System.exit(0);
//                        }
//                    });
//                    user.setVisible(true);
//                }
//            });
//        }

        // Variables declaration - do not modify//GEN-BEGIN:variables
        private javax.swing.JTable accounts_table;
        private javax.swing.JButton apply_loan_button;
        private javax.swing.JButton deposit_button;
        private javax.swing.JScrollPane jScrollPane1;
        private javax.swing.JPanel panel1;
        private javax.swing.JButton transfer_money_button;
        private javax.swing.JButton withdraw_button;

        // End of variables declaration//GEN-END:variables
}
